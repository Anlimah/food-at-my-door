<?php
/**
 * DefaultApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Food Delivery API
 *
 * API for managing restaurants, menus, orders, and deliveries in a food delivery app
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DefaultApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DefaultApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for categoriesCategoryIdDelete
     *
     * Delete a category.
     *
     */
    public function testCategoriesCategoryIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for categoriesCategoryIdGet
     *
     * Get a category by ID.
     *
     */
    public function testCategoriesCategoryIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for categoriesCategoryIdPut
     *
     * Update a category.
     *
     */
    public function testCategoriesCategoryIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for categoriesGet
     *
     * Get all categories.
     *
     */
    public function testCategoriesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for categoriesPost
     *
     * Create a new category.
     *
     */
    public function testCategoriesPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customersCustomerIdDelete
     *
     * Delete a customer.
     *
     */
    public function testCustomersCustomerIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customersCustomerIdGet
     *
     * Get a customer by ID.
     *
     */
    public function testCustomersCustomerIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customersCustomerIdPut
     *
     * Update a customer.
     *
     */
    public function testCustomersCustomerIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customersGet
     *
     * Get all customers.
     *
     */
    public function testCustomersGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customersPost
     *
     * Create a new customer.
     *
     */
    public function testCustomersPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for discountsDiscountIdDelete
     *
     * Delete a discount.
     *
     */
    public function testDiscountsDiscountIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for discountsDiscountIdGet
     *
     * Get a discount by ID.
     *
     */
    public function testDiscountsDiscountIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for discountsDiscountIdPut
     *
     * Update a discount.
     *
     */
    public function testDiscountsDiscountIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for discountsGet
     *
     * Get all discounts.
     *
     */
    public function testDiscountsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for discountsPost
     *
     * Create a new discount.
     *
     */
    public function testDiscountsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ingredientsGet
     *
     * Get all ingredients.
     *
     */
    public function testIngredientsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ingredientsIngredientIdDelete
     *
     * Delete an ingredient.
     *
     */
    public function testIngredientsIngredientIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ingredientsIngredientIdGet
     *
     * Get an ingredient by ID.
     *
     */
    public function testIngredientsIngredientIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ingredientsIngredientIdPut
     *
     * Update an ingredient.
     *
     */
    public function testIngredientsIngredientIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ingredientsPost
     *
     * Create a new ingredient.
     *
     */
    public function testIngredientsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemCategoriesCategoryIdDelete
     *
     * Delete a menu item category.
     *
     */
    public function testMenuItemCategoriesCategoryIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemCategoriesCategoryIdGet
     *
     * Get a menu item category by ID.
     *
     */
    public function testMenuItemCategoriesCategoryIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemCategoriesCategoryIdPut
     *
     * Update a menu item category.
     *
     */
    public function testMenuItemCategoriesCategoryIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemCategoriesGet
     *
     * Get all menu item categories.
     *
     */
    public function testMenuItemCategoriesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemCategoriesPost
     *
     * Create a new menu item category.
     *
     */
    public function testMenuItemCategoriesPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemOptionsGet
     *
     * Get all menu item options.
     *
     */
    public function testMenuItemOptionsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemOptionsOptionIdDelete
     *
     * Delete a menu item option.
     *
     */
    public function testMenuItemOptionsOptionIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemOptionsOptionIdGet
     *
     * Get a menu item option by ID.
     *
     */
    public function testMenuItemOptionsOptionIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemOptionsOptionIdPut
     *
     * Update a menu item option.
     *
     */
    public function testMenuItemOptionsOptionIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemOptionsPost
     *
     * Create a new menu item option.
     *
     */
    public function testMenuItemOptionsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemsGet
     *
     * Get all menu items.
     *
     */
    public function testMenuItemsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemsItemIdDelete
     *
     * Delete a menu item.
     *
     */
    public function testMenuItemsItemIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemsItemIdGet
     *
     * Get a menu item by ID.
     *
     */
    public function testMenuItemsItemIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemsItemIdPut
     *
     * Update a menu item.
     *
     */
    public function testMenuItemsItemIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for menuItemsPost
     *
     * Create a new menu item.
     *
     */
    public function testMenuItemsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderItemsGet
     *
     * Get all order items.
     *
     */
    public function testOrderItemsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderItemsItemIdDelete
     *
     * Delete an order item.
     *
     */
    public function testOrderItemsItemIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderItemsItemIdGet
     *
     * Get an order item by ID.
     *
     */
    public function testOrderItemsItemIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderItemsItemIdPut
     *
     * Update an order item.
     *
     */
    public function testOrderItemsItemIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orderItemsPost
     *
     * Create a new order item.
     *
     */
    public function testOrderItemsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersGet
     *
     * Get all orders.
     *
     */
    public function testOrdersGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersOrderIdDelete
     *
     * Delete an order.
     *
     */
    public function testOrdersOrderIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersOrderIdGet
     *
     * Get an order by ID.
     *
     */
    public function testOrdersOrderIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersOrderIdPut
     *
     * Update an order.
     *
     */
    public function testOrdersOrderIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for ordersPost
     *
     * Create a new order.
     *
     */
    public function testOrdersPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsComponentItemGet
     *
     * Generate a report for a specific component and item.
     *
     */
    public function testReportsComponentItemGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsCustomersAverageOrderFrequencyGet
     *
     * Generate a report of average order frequency per customer.
     *
     */
    public function testReportsCustomersAverageOrderFrequencyGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsCustomersRetentionGet
     *
     * Generate a report of customer retention rate.
     *
     */
    public function testReportsCustomersRetentionGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsCustomersTotalGet
     *
     * Generate a report of total number of customers registered on the platform.
     *
     */
    public function testReportsCustomersTotalGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsDiscountsEffectivenessGet
     *
     * Generate a report of effectiveness of discounts in increasing order volume or customer retention.
     *
     */
    public function testReportsDiscountsEffectivenessGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsDiscountsRevenueImpactGet
     *
     * Generate a report of revenue impact of discounts.
     *
     */
    public function testReportsDiscountsRevenueImpactGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsDiscountsUsageGet
     *
     * Generate a report of usage statistics for each discount code.
     *
     */
    public function testReportsDiscountsUsageGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsGet
     *
     * Get all reports.
     *
     */
    public function testReportsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsMenusPopularityGet
     *
     * Generate a report of most popular dishes at each restaurant.
     *
     */
    public function testReportsMenusPopularityGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsOrdersAverageValueGet
     *
     * Generate a report of average order value within a specific time period.
     *
     */
    public function testReportsOrdersAverageValueGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsOrdersFulfillmentTimeGet
     *
     * Generate a report of order fulfillment time statistics.
     *
     */
    public function testReportsOrdersFulfillmentTimeGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsOrdersTotalGet
     *
     * Generate a report of total number of orders placed within a specific time period.
     *
     */
    public function testReportsOrdersTotalGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsPost
     *
     * Create a new report.
     *
     */
    public function testReportsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsReportIdDelete
     *
     * Delete a report.
     *
     */
    public function testReportsReportIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsReportIdGet
     *
     * Get a report by ID.
     *
     */
    public function testReportsReportIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsReportIdPut
     *
     * Update a report.
     *
     */
    public function testReportsReportIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsRestaurantsOrdersGet
     *
     * Generate a report of total orders received by each restaurant.
     *
     */
    public function testReportsRestaurantsOrdersGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsRestaurantsRatingsGet
     *
     * Generate a report of average ratings of each restaurant.
     *
     */
    public function testReportsRestaurantsRatingsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reportsRestaurantsRevenueGet
     *
     * Generate a report of revenue generated by each restaurant.
     *
     */
    public function testReportsRestaurantsRevenueGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsGet
     *
     * Get all restaurants.
     *
     */
    public function testRestaurantsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsPost
     *
     * Create a new restaurant.
     *
     */
    public function testRestaurantsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsRestaurantIdDelete
     *
     * Delete a restaurant.
     *
     */
    public function testRestaurantsRestaurantIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsRestaurantIdGet
     *
     * Get a restaurant by ID.
     *
     */
    public function testRestaurantsRestaurantIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsRestaurantIdMenusGet
     *
     * Get all menu items for a restaurant.
     *
     */
    public function testRestaurantsRestaurantIdMenusGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsRestaurantIdMenusMenuIdDelete
     *
     * Delete a menu item.
     *
     */
    public function testRestaurantsRestaurantIdMenusMenuIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsRestaurantIdMenusMenuIdGet
     *
     * Get a menu item by ID.
     *
     */
    public function testRestaurantsRestaurantIdMenusMenuIdGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsRestaurantIdMenusMenuIdPut
     *
     * Update a menu item.
     *
     */
    public function testRestaurantsRestaurantIdMenusMenuIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsRestaurantIdMenusPost
     *
     * Create a new menu item.
     *
     */
    public function testRestaurantsRestaurantIdMenusPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restaurantsRestaurantIdPut
     *
     * Update a restaurant.
     *
     */
    public function testRestaurantsRestaurantIdPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
